//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Final_Project.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getsearchedurl", ReplyAction="http://tempuri.org/IService1/getsearchedurlResponse")]
        string getsearchedurl();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getsearchedurl", ReplyAction="http://tempuri.org/IService1/getsearchedurlResponse")]
        System.Threading.Tasks.Task<string> getsearchedurlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setTimeFrame", ReplyAction="http://tempuri.org/IService1/setTimeFrameResponse")]
        void setTimeFrame(string Time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setTimeFrame", ReplyAction="http://tempuri.org/IService1/setTimeFrameResponse")]
        System.Threading.Tasks.Task setTimeFrameAsync(string Time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setLeague", ReplyAction="http://tempuri.org/IService1/setLeagueResponse")]
        void setLeague(string League);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setLeague", ReplyAction="http://tempuri.org/IService1/setLeagueResponse")]
        System.Threading.Tasks.Task setLeagueAsync(string League);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTeamInfo", ReplyAction="http://tempuri.org/IService1/GetTeamInfoResponse")]
        string GetTeamInfo(string s, string days);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTeamInfo", ReplyAction="http://tempuri.org/IService1/GetTeamInfoResponse")]
        System.Threading.Tasks.Task<string> GetTeamInfoAsync(string s, string days);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReturnMatches", ReplyAction="http://tempuri.org/IService1/ReturnMatchesResponse")]
        string ReturnMatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReturnMatches", ReplyAction="http://tempuri.org/IService1/ReturnMatchesResponse")]
        System.Threading.Tasks.Task<string> ReturnMatchesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Final_Project.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Final_Project.ServiceReference1.IService1>, Final_Project.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string getsearchedurl() {
            return base.Channel.getsearchedurl();
        }
        
        public System.Threading.Tasks.Task<string> getsearchedurlAsync() {
            return base.Channel.getsearchedurlAsync();
        }
        
        public void setTimeFrame(string Time) {
            base.Channel.setTimeFrame(Time);
        }
        
        public System.Threading.Tasks.Task setTimeFrameAsync(string Time) {
            return base.Channel.setTimeFrameAsync(Time);
        }
        
        public void setLeague(string League) {
            base.Channel.setLeague(League);
        }
        
        public System.Threading.Tasks.Task setLeagueAsync(string League) {
            return base.Channel.setLeagueAsync(League);
        }
        
        public string GetTeamInfo(string s, string days) {
            return base.Channel.GetTeamInfo(s, days);
        }
        
        public System.Threading.Tasks.Task<string> GetTeamInfoAsync(string s, string days) {
            return base.Channel.GetTeamInfoAsync(s, days);
        }
        
        public string ReturnMatches() {
            return base.Channel.ReturnMatches();
        }
        
        public System.Threading.Tasks.Task<string> ReturnMatchesAsync() {
            return base.Channel.ReturnMatchesAsync();
        }
    }
}
