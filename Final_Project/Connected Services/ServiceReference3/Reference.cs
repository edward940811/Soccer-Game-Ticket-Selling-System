//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Final_Project.ServiceReference3 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference3.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetSortby", ReplyAction="http://tempuri.org/IService1/SetSortbyResponse")]
        void SetSortby(string sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetSortby", ReplyAction="http://tempuri.org/IService1/SetSortbyResponse")]
        System.Threading.Tasks.Task SetSortbyAsync(string sort);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReturnSearchedUrl", ReplyAction="http://tempuri.org/IService1/ReturnSearchedUrlResponse")]
        string ReturnSearchedUrl();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ReturnSearchedUrl", ReplyAction="http://tempuri.org/IService1/ReturnSearchedUrlResponse")]
        System.Threading.Tasks.Task<string> ReturnSearchedUrlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetNewsChannel", ReplyAction="http://tempuri.org/IService1/SetNewsChannelResponse")]
        void SetNewsChannel(string channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetNewsChannel", ReplyAction="http://tempuri.org/IService1/SetNewsChannelResponse")]
        System.Threading.Tasks.Task SetNewsChannelAsync(string channel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MakeRequest", ReplyAction="http://tempuri.org/IService1/MakeRequestResponse")]
        string MakeRequest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MakeRequest", ReplyAction="http://tempuri.org/IService1/MakeRequestResponse")]
        System.Threading.Tasks.Task<string> MakeRequestAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Final_Project.ServiceReference3.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Final_Project.ServiceReference3.IService1>, Final_Project.ServiceReference3.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SetSortby(string sort) {
            base.Channel.SetSortby(sort);
        }
        
        public System.Threading.Tasks.Task SetSortbyAsync(string sort) {
            return base.Channel.SetSortbyAsync(sort);
        }
        
        public string ReturnSearchedUrl() {
            return base.Channel.ReturnSearchedUrl();
        }
        
        public System.Threading.Tasks.Task<string> ReturnSearchedUrlAsync() {
            return base.Channel.ReturnSearchedUrlAsync();
        }
        
        public void SetNewsChannel(string channel) {
            base.Channel.SetNewsChannel(channel);
        }
        
        public System.Threading.Tasks.Task SetNewsChannelAsync(string channel) {
            return base.Channel.SetNewsChannelAsync(channel);
        }
        
        public string MakeRequest() {
            return base.Channel.MakeRequest();
        }
        
        public System.Threading.Tasks.Task<string> MakeRequestAsync() {
            return base.Channel.MakeRequestAsync();
        }
    }
}
